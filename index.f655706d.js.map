{"mappings":"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","sources":["scripts/functions.js"],"sourcesContent":["var randomNumber = 42\r\nvar userGuess = ''\r\nvar displayInfo = {}\r\nvar displayNumber = 0\r\nvar isReloadAllowed = false\r\n\r\nsetDisabledElements()\r\nhandleNewMatch()\r\n\r\nasync function handleNewMatch(){\r\n    const response = await fetch(`https://us-central1-ss-devops.cloudfunctions.net/rand?min=${lowerLimit}&max=${upperLimit}`)\r\n    \r\n    if(response.status !== 200){\r\n        changeDisplay(textDisplayColor['error'], response.status)\r\n        return\r\n    }\r\n    \r\n    const data = await response.json()\r\n\r\n    randomNumber = data.value\r\n    changeDisplay(textDisplayColor['default'], 0)\r\n}\r\n\r\nfunction handleUserGuess(event){\r\n    event.preventDefault()\r\n\r\n    const guess = Number(userGuess)\r\n    let id = ''\r\n    userGuess = ''\r\n\r\n    if (randomNumber === guess) {\r\n        id = 'success'\r\n    }\r\n    else if (randomNumber < guess) {\r\n        id = 'less'\r\n    }\r\n    else {\r\n        id = 'greater'\r\n    }\r\n\r\n    changeDisplay(textDisplayColor[id], guess)\r\n    addLedDisplay()\r\n}\r\n\r\nfunction handleNumberInput(input){\r\n    const value = Number(input.value)\r\n\r\n    if (value >= lowerLimit && value <= upperLimit){     \r\n        userGuess = String(value)\r\n    }\r\n    else if (value === 0){\r\n        userGuess = ''\r\n    }\r\n\r\n    setDisabledElements()\r\n}\r\n\r\nfunction setDisabledElements(){\r\n    const MatchButton = document.querySelectorAll('.newMatchButton')[0]\r\n    MatchButton.disabled = !isReloadAllowed\r\n\r\n    const GuessInput = document.querySelectorAll('.guessInput')[0]\r\n    GuessInput.disabled = isReloadAllowed\r\n    GuessInput.value = userGuess\r\n\r\n    const GuessSubmit = document.querySelectorAll('.guessSubmit')[0]\r\n    GuessSubmit.disabled = (userGuess === '' || isReloadAllowed)\r\n}\r\n\r\nfunction getLedType(key, className, digit){\r\n    if (ledLight[key][className].includes(digit)){\r\n        if (isReloadAllowed){\r\n            return displayInfo.id\r\n        }\r\n        \r\n        return 'active'\r\n    }\r\n\r\n    return 'disabled'\r\n}\r\n\r\nfunction addLedDisplay(){\r\n    const displayNumberElement = document.getElementById('displayNumber')\r\n    displayNumberElement.innerHTML = ''\r\n    const digits = String(displayNumber).split('')\r\n\r\n    for (const digit of digits){\r\n        const ledNumber = document.createElement('div')\r\n        ledNumber.className = 'ledNumber'\r\n    \r\n        Object.keys(ledLight).forEach((key) => {\r\n            const newZone = document.createElement('div')\r\n            newZone.className = key\r\n    \r\n            if (key !== 'middle'){\r\n                Object.keys(ledLight[key]).forEach(secKey => {       \r\n                    const newLedSegment = document.createElement('div')\r\n                    newLedSegment.className = secKey\r\n\r\n                    const style = getLedType(key, secKey, digit)\r\n                    newLedSegment.style.borderTopColor = ledDisplayColor[style]\r\n\r\n                    newZone.appendChild(newLedSegment)\r\n                })\r\n            }\r\n            else {\r\n                const style = getLedType(key, key, digit)\r\n                newZone.className += ` ${style}`\r\n                newZone.style.background = ledDisplayColor[style]\r\n            }\r\n    \r\n            ledNumber.appendChild(newZone)\r\n        })\r\n    \r\n        displayNumberElement.appendChild(ledNumber)\r\n    }\r\n}\r\n\r\nfunction changeDisplay(info, number){\r\n    displayNumber = number\r\n    displayInfo = info\r\n    isReloadAllowed = (info.id === 'success' || info.id === 'error')\r\n    \r\n    setDisabledElements()\r\n    addLedDisplay()\r\n\r\n    const displayTextElement = document.getElementById('displayText')\r\n    displayTextElement.style.color = info.color\r\n    displayTextElement.textContent = info.text\r\n}"],"names":[],"version":3,"file":"index.f655706d.js.map","sourceRoot":"/__parcel_source_root/"}